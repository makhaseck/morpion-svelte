<script>
  import logo from './assets/logo.png';

  let plateau = Array(9).fill(null);
  let premierJoueur = "X";
  let joueurActuel = premierJoueur;
  let gagnant = null;
  let score = { X: 0, O: 0 };
  let message = "Choisissez qui commence.";
  let combinaisonGagnante = [];
  let partiesJouees = 0;
  let partieCommencee = false;
  $:console.log("ici");

  function demarrerPartie() {
    joueurActuel = premierJoueur;
    plateau = Array(9).fill(null);
    gagnant = null;
    message = Joueur ${joueurActuel} à toi !;
    combinaisonGagnante = [];
    partieCommencee = true;
  }

  function jouerCase(index) {
    if (plateau[index] || gagnant || !partieCommencee) return;

    plateau[index] = joueurActuel;
    verifierGagnant();

    if (!gagnant) {
      joueurActuel = joueurActuel === "X" ? "O" : "X";
      message = Joueur ${joueurActuel} à toi !;
    }
  }

  function verifierGagnant() {
    const combinaisons = [
      [0, 1, 2], [3, 4, 5], [6, 7, 8],
      [0, 3, 6], [1, 4, 7], [2, 5, 8],
      [0, 4, 8], [2, 4, 6]
    ];

    for (let combo of combinaisons) {
      const [a, b, c] = combo;
      if (plateau[a] && plateau[a] === plateau[b] && plateau[b] === plateau[c]) {
        gagnant = plateau[a];
        score[gagnant]++;
        message = Le joueur ${gagnant} a gagné !;
        combinaisonGagnante = combo;
        partiesJouees++;
        return;
      }
    }

    if (!plateau.includes(null)) {
      gagnant = "égalité";
      message = "Match nul !";
      partiesJouees++;
    }
  }

  function rejouerPartie() {
    // Le gagnant commence la prochaine partie s'il y en a un
    if (gagnant === "X" || gagnant === "O") {
      premierJoueur = gagnant;
    }
    joueurActuel = premierJoueur;
    plateau = Array(9).fill(null);
    gagnant = null;
    message = Joueur ${joueurActuel} à toi !;
    combinaisonGagnante = [];
  }

  function reinitialiserScore() {
    score = { X: 0, O: 0 };
    premierJoueur = "X";
    partieCommencee = false;
    plateau = Array(9).fill(null);
    joueurActuel = premierJoueur;
    gagnant = null;
    message = "Choisissez qui commence.";
    combinaisonGagnante = [];
    partiesJouees = 0;
  }

  function estGagnant(index) {
    return combinaisonGagnante.includes(index);
  }
</script>

<main>
  <img src="{logo}" alt="Logo" class="logo" />

  <h1>Jeu de Morpion</h1>

  {#if !partieCommencee}
    <div>
      <label> ?</label>
      <select bind:value={premierJoueur}>
        <option value="X">Joueur X</option>
        <option value="O">Joueur O</option>
      </select>
      <button on:click={demarrerPartie}>Démarrer la partie</button>
    </div>
  {:else}
    <p>{message}</p>

    <div class="grille">
      {#each plateau as caseJeu, i}
        <div
          class="case {gagnant && estGagnant(i) ? 'gagnante' : ''}"
          on:click={() => jouerCase(i)}
        >
          {caseJeu}
        </div>
      {/each}
    </div>

    <p class="score">Score — X : {score.X} | O : {score.O}</p>
    <p class="score">Parties jouées : {partiesJouees}</p>

    <div class="boutons">
      <button on:click={rejouerPartie}>Rejouer</button>
      <button on:click={reinitialiserScore}>Réinitialiser le score</button>
    </div>
  {/if}
</main>


<style>
  :global(body) {
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', sans-serif;
    background: linear-gradient(135deg, #000000, #6a0dad);
    color: white;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  main {
    text-align: center;
    padding: 2rem;
    max-width: 600px;
    width: 100%;
  }

  .logo {
    width: 120px;
    margin-bottom: 1rem;
  }

  h1 {
    margin-top: 0;
  }

  .grille {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 10px;
    margin: 1rem auto;
    justify-content: center;
  }

  .case {
    width: 100px;
    height: 100px;
    font-size: 2rem;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border-radius: 10px;
    transition: background-color 0.3s;
    user-select: none;
  }

  .case:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .gagnante {
    animation: clignoter 0.8s ease-in-out infinite alternate;
    background-color: #b3ffb3 !important;
  }

  @keyframes clignoter {
    from {
      background-color: #b3ffb3;
    }
    to {
      background-color: #66ff66;
    }
  }

  .score {
    margin: 1rem 0;
    font-weight: bold;
    font-size: 1.2rem;
  }

  .boutons button {
    margin: 0.5rem;
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    background: white;
    color: black;
    cursor: pointer;
    font-weight: bold;
    font-size: 1rem;
  }

  .boutons button:hover {
    background: #eaeaea;
  }
</style>
